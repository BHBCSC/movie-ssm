<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">


    <!--Duboo 消费者配置 -->

    <dubbo:registry address="zookeeper://192.168.126.128:2181"/>
    <dubbo:annotation package="com.csc.movie.shiro"/>
    <dubbo:consumer timeout="3000"/>
    <dubbo:application name="movie_shiro"/>
    <context:component-scan base-package="com.csc.movie.shiro"/>
    <dubbo:reference interface="com.csc.movie.service.AccountService" id="accountService" check="false"/>
    <!--  <context:component-scan base-package="com.csc.movie.shiro"/>-->

    <!-- Realm实现 -->
    <!--<bean id="userRealm" class="com.csc.movie.shiro.UserRealm">
        &lt;!&ndash;
        <property name="userService" ref="userService"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>&ndash;&gt;
    </bean>-->
    <!--
        &lt;!&ndash;会话ID生成器 &ndash;&gt;
        <bean id="sessionIdGenerator"
              class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
        &lt;!&ndash; 会话DAO &ndash;&gt;
        <bean id="sessionDAO"
              class="com.csc.movie.session.RedisSessionDAO">
            <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
        </bean>
        &lt;!&ndash; 会话验证调度器 验证过期&ndash;&gt;
        <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
            <property name="sessionValidationInterval" value="1800000"/>
            <property name="sessionManager" ref="sessionManager"/>
        </bean>
        &lt;!&ndash; 会话管理器 &ndash;&gt;
        <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
            <property name="globalSessionTimeout" value="1800000"/>
            <property name="deleteInvalidSessions" value="true"/>
            <property name="sessionValidationSchedulerEnabled" value="true"/>
            <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
            <property name="sessionDAO" ref="sessionDAO"/>
            <property name="sessionIdCookieEnabled" value="true"/>
            <property name="sessionIdCookie" ref="sessionIdCookie"/>
        </bean>
        &lt;!&ndash; 会话Cookie模板 &ndash;&gt;
        <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
            <constructor-arg value="sid"/>
            <property name="httpOnly" value="true"/>
            <property name="maxAge" value="180000"/>
        </bean>-->

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <!--<property name="sessionManager" ref="sessionManager"/>-->
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="12345678"/>
        <!--value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"-->
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="MyFilter" class="com.csc.movie.shiro.filter.MyFormAuthenticationFilter">
        <property name="loginUrl" value="/account/login"/>
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="isRemember"/>
        <property name="successUrl" value="/user/mine"/>
    </bean>

    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="loginUrl" value="/account/login"/>
        <property name="successUrl" value="/user/mine"/>
        <property name="securityManager" ref="securityManager"/>
        <property name="unauthorizedUrl" value="/account/unauthorized"/>
        <property name="filters">
            <util:map>
                <entry key="authc1" value-ref="MyFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <!-- anon：它对应的过滤器里面是空的,什么都没做-->
            <!-- authc：该过滤器下的页面必须验证后才能访问,
            它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->
            <value>
                /account/login = anon
                /user/mine = user
                /movie/watched = user
                /movie/delete = user
                /account/logout = logout
                / = authc1
                /** = anon
            </value>
        </property>
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>
